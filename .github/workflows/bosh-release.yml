name: Create BOSH release

on:
  # Allows you to run this workflow manually from the Actions tab ONLY
  workflow_dispatch:
    inputs:
      release_tag:
        required: false
        description: Tag version to be released, e.g. '0.0.1'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Bump version and create tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ github.event.inputs.release_tag }}
          dry_run: true
          
      - name: Install BOSH CLI
        run: |
          set -euo pipefail
          echo "Installing bosh cli"
          curl -sSL $(curl -ksL "https://api.github.com/repos/cloudfoundry/bosh-cli/releases/latest" | jq -r '.assets[] | select(.name | contains("linux")) | .browser_download_url') --output bosh
          chmod +x bosh
          sudo mv bosh /usr/local/bin/bosh
          bosh -v
          
      - name: Vendor BOSH packages
        run: bosh vendor-package golang-1.17-linux ./src/golang-release
        
      - name: Build BOSH release tarball
        id: build_bosh_release
        run: |
          set -euo pipefail
          VERSION=${{ steps.tag_version.outputs.new_version }}
          RELEASE_FILE=go-cf-api-boshrelease-"$VERSION".tgz

          bosh create-release --final --version "$VERSION" --tarball "$RELEASE_FILE"
          echo "::set-output name=sha1::$(sha1sum "$RELEASE_FILE" | cut -d ' ' -f 1)"
          
      - name: Push Tag
        id: push_tag
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.tag_version.outputs.new_version }}

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./go-cf-api-boshrelease-*.tgz
          fail_on_unmatched_files: true
          body: |
            ${{ steps.tag_version.outputs.changelog }}

            ## Deployment
            ```YAML
            releases:
              name: go-cf-api
              version: ${{ steps.tag_version.outputs.new_version }}
              url: https://github.com/cloudfoundry/go-cf-api-release/releases/download/${{ steps.tag_version.outputs.new_tag }}/go-cf-api-boshrelease-${{ steps.tag_version.outputs.new_version }}.tgz
              sha1: ${{ steps.build_bosh_release.outputs.sha1 }}
            ```
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          
          
